{"version":3,"sources":["game_of_life.ts"],"names":[],"mappings":"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","file":"game_of_life.js","sourcesContent":["class Quad {\r\n\r\n    app: App;\r\n    fillcolor: string;\r\n    strokecolor: string;\r\n    linewidth: number;\r\n    radius: number;\r\n    start: number;\r\n    end: number;\r\n    x1: number;\r\n    y1: number;\r\n    x2: number;\r\n    y2: number;\r\n    x3: number;\r\n    y3: number;\r\n    x4: number;\r\n    y4: number;\r\n\r\n    alive: boolean;\r\n    n: number;\r\n\r\n    constructor(app: App, fillcolor: string, strokecolor: string, linewidth: number, x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, x4: number, y4: number, alive: boolean) {\r\n        this.app = app;\r\n        this.fillcolor = fillcolor;\r\n        this.strokecolor = strokecolor;\r\n        this.linewidth = linewidth;\r\n        this.x1 = x1;\r\n        this.y1 = y1;\r\n        this.x2 = x2;\r\n        this.y2 = y2;\r\n        this.x3 = x3;\r\n        this.y3 = y3;\r\n        this.x4 = x4;\r\n        this.y4 = y4;\r\n        this.alive = alive;\r\n\r\n        this.n = 0;\r\n    }\r\n    draw() {\r\n        const ctx = this.app.ctx;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.x1, this.y1);\r\n        ctx.lineTo(this.x2, this.y2);\r\n        ctx.lineTo(this.x3, this.y3);\r\n        ctx.lineTo(this.x4, this.y4);\r\n        ctx.closePath();\r\n\r\n        if (this.linewidth !== 0) {\r\n            ctx.strokeStyle = this.strokecolor;\r\n            ctx.lineWidth = this.linewidth;\r\n            ctx.stroke();\r\n        }\r\n\r\n        ctx.fillStyle = this.fillcolor;\r\n        ctx.fill();\r\n    }\r\n}\r\n\r\nclass Grid {\r\n    app: App;\r\n\r\n    alive: boolean;\r\n\r\n    width: number;\r\n    height: number;\r\n    size: number;\r\n    matrix: any[][];\r\n\r\n    constructor(app: App, width: number, height: number, size: number) {\r\n\r\n        this.app = app;\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.size = size;\r\n\r\n        this.matrix = new Array;\r\n\r\n\r\n\r\n        let x = 0;\r\n        let y = 0;\r\n        for (let i = 0; i < this.height; i++) {\r\n            this.matrix.push(new Array);\r\n            for (let j = 0; j < this.width; j++) {\r\n                let rng = Math.round(Math.random() / 1.87);\r\n                if (rng) {\r\n                    this.matrix[i].push(new Quad(this.app, 'white', 'black', 1, x, y, x + this.size, y, x + this.size, y + this.size, x, y + this.size, true));\r\n                } else {\r\n                    this.matrix[i].push(new Quad(this.app, 'black', 'black', 1, x, y, x + this.size, y, x + this.size, y + this.size, x, y + this.size, false));\r\n                }\r\n\r\n\r\n                this.matrix[i][j].draw();\r\n                x += this.size;\r\n            }\r\n            x = 0;\r\n            y += this.size;\r\n        }\r\n    }\r\n    draw() {\r\n        for (let i = 0; i < this.height; i++) {\r\n            for (let j = 0; j < this.width; j++) {\r\n                this.matrix[i][j].draw();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Conway {\r\n    grid: Grid;\r\n    alive: boolean;\r\n\r\n    constructor(grid: Grid) {\r\n        this.grid = grid;\r\n    }\r\n\r\n    check() {\r\n        for (let i = 0; i < this.grid.height; i++) {\r\n            for (let j = 0; j < this.grid.width; j++) {\r\n                this.grid.matrix[i][j].n = 0;\r\n\r\n\r\n                //counts all neighbors (8 surrounding spots) (also checks if a border piece)\r\n                if (i > 0 && j > 0 && this.grid.matrix[i - 1][j - 1].alive) {\r\n                    this.grid.matrix[i][j].n++;\r\n                }\r\n                if (j > 0 && this.grid.matrix[i][j - 1].alive) {\r\n                    this.grid.matrix[i][j].n++;\r\n                }\r\n                if (i < this.grid.matrix.length - 1 && j > 0 && this.grid.matrix[i + 1][j - 1].alive) {\r\n                    this.grid.matrix[i][j].n++;\r\n                }\r\n                if (i > 0 && this.grid.matrix[i - 1][j].alive) {\r\n                    this.grid.matrix[i][j].n++;\r\n                }\r\n                if (i < this.grid.matrix.length - 1 && this.grid.matrix[i + 1][j].alive) {\r\n                    this.grid.matrix[i][j].n++;\r\n                }\r\n                if (i > 0 && j < this.grid.matrix[0].length - 1 && this.grid.matrix[i - 1][j + 1].alive) {\r\n                    this.grid.matrix[i][j].n++;\r\n                }\r\n                if (j < this.grid.matrix[0].length - 1 && this.grid.matrix[i][j + 1].alive) {\r\n                    this.grid.matrix[i][j].n++;\r\n                }\r\n                if (i < this.grid.matrix.length - 1 && j < this.grid.matrix[0].length - 1 && this.grid.matrix[i + 1][j + 1].alive) {\r\n                    this.grid.matrix[i][j].n++;\r\n                }\r\n\r\n\r\n\r\n                //Any live cell with fewer than two live neighbours dies, as if caused by under-population.\r\n                if (this.grid.matrix[i][j].alive && this.grid.matrix[i][j].n < 2) {\r\n                    this.grid.matrix[i][j].alive = false;\r\n                    this.grid.matrix[i][j].fillcolor = 'black';\r\n                }\r\n\r\n                else if (this.grid.matrix[i][j].alive && this.grid.matrix[i][j].n === 2 || this.grid.matrix[i][j].n === 3) {\r\n                    this.grid.matrix[i][j].alive = true;\r\n                    this.grid.matrix[i][j].fillcolor = 'white';\r\n                }\r\n                //Any live cell with more than three live neighbours dies, as if by over-population.\r\n                else if (this.grid.matrix[i][j].alive && this.grid.matrix[i][j].n > 3) {\r\n                    this.grid.matrix[i][j].alive = false;\r\n                    this.grid.matrix[i][j].fillcolor = 'black';\r\n                } else if (this.grid.matrix[i][j].n === 3) {\r\n                    this.grid.matrix[i][j].alive = true;\r\n                    this.grid.matrix[i][j].fillcolor = 'white';\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass App {\r\n    canvas: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    w: number;\r\n    h: number;\r\n\r\n    arr: any[];\r\n\r\n    grid: Grid;\r\n    conway: Conway;\r\n\r\n    timer: number;\r\n\r\n\r\n    last_frame: number;\r\n\r\n\r\n    constructor() {\r\n        //Codepen doesn't like casting :'(\r\n        // this.canvas = document.getElementById('canvas');\r\n        this.canvas = <HTMLCanvasElement>document.getElementById('canvas');\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.sizeCanvas();\r\n        this.initEvents();\r\n        window.requestAnimationFrame((t) => { this.draw(t); });\r\n        console.log(this);\r\n\r\n        let grid = new Grid(this, 100, 100, 2);\r\n        this.conway = new Conway(grid);\r\n\r\n        console.log(this.conway.grid);\r\n\r\n        this.timer = 0;\r\n\r\n\r\n        this.last_frame = null;\r\n\r\n    }\r\n    sizeCanvas() {\r\n        this.w = this.ctx.canvas.width = window.innerWidth;\r\n        this.h = this.ctx.canvas.height = window.innerHeight;\r\n    }\r\n    draw(t: any) {\r\n        window.requestAnimationFrame((t) => { this.draw(t); });\r\n\r\n        this.ctx.clearRect(0, 0, this.w, this.h);\r\n        this.timer += 1;\r\n\r\n        this.conway.check();\r\n\r\n\r\n        this.conway.grid.draw();\r\n\r\n        this.last_frame = t;\r\n    }\r\n\r\n\r\n    initEvents() {\r\n        window.onresize = (e) => { this.sizeCanvas(); };\r\n    }\r\n\r\n    randomPath() {\r\n        return (Math.random() * 2 - 1);\r\n    }\r\n\r\n    randomSize() {\r\n        return (Math.random() * 60);\r\n    }\r\n\r\n    rngColor() {\r\n\r\n        let r = Math.round(Math.random() * 255);\r\n        let b = Math.round(Math.random() * 255);\r\n        let g = Math.round(Math.random() * 255);\r\n\r\n        return ('rgb(' + r + ',' + g + ',' + b + ')');\r\n\r\n    }\r\n}\r\n\r\nvar app = new App();"],"sourceRoot":"/source/"}