{"version":3,"sources":["bounce.ts"],"names":[],"mappings":"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","file":"bounce.js","sourcesContent":["interface Vector {\r\n    x_speed: number;\r\n    y_speed: number;\r\n    x_acc: number;\r\n    y_acc: number;\r\n}\r\n\r\nclass Circle implements Vector {\r\n\r\n    //Connecting canvas to object\r\n    app: App;\r\n    \r\n    //Arc properties\r\n    x: number;\r\n    y: number;\r\n    fillcolor: string;\r\n    strokecolor: string;\r\n    width: number;\r\n    radius: number;\r\n    start: number;\r\n    end: number;\r\n\r\n    //Vector interface\r\n    x_speed: number;\r\n    y_speed: number;\r\n    x_acc: number;\r\n    y_acc: number;\r\n\r\n  constructor(app: App, x: number, y: number, fillcolor: string, strokecolor: string, width: number, radius: number, start: number, end: number) {\r\n    this.app = app;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.fillcolor = fillcolor;\r\n    this.strokecolor = strokecolor;\r\n    this.width = width;\r\n    this.radius = radius;\r\n    this.start = start;\r\n    this.end = end;\r\n\r\n    this.x_speed = 0;\r\n    this.y_speed = 0;\r\n    this.x_acc = 0;\r\n    this.y_acc = 0;\r\n  }\r\n  draw(): void {\r\n    const ctx = this.app.ctx;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.radius, this.start, this.end);\r\n    ctx.strokeStyle = this.strokecolor;\r\n    ctx.lineWidth = this.width;\r\n    ctx.stroke();\r\n    ctx.fillStyle = this.fillcolor;\r\n    ctx.fill();\r\n\r\n    this.x_speed += this.x_acc;\r\n    this.x += this.x_speed;\r\n\r\n    this.y_speed += this.y_acc;\r\n    this.y += this.y_speed;\r\n  }\r\n  gravity(y?:number): void {\r\n    y ? this.y_acc = y : this.y_acc = 2;\r\n  }\r\n\r\n  wind(x?:number): void {\r\n    x ? this.x_acc = x : this.x_acc = 1;\r\n  }\r\n\r\n  initial_speed_x(x): void {\r\n      this.x_speed = x;\r\n  }\r\n\r\n  initial_speed_y(y): void {\r\n      this.y_speed = y;\r\n  }\r\n  \r\n\r\n}\r\n\r\n\r\nclass App {\r\n    canvas: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    w: number;\r\n    h: number;\r\n    circle: Circle;\r\n    circle2: Circle;\r\n    arr: any[];\r\n\r\n  constructor() {\r\n    //Codepen doesn't like casting :'(\r\n    // this.canvas = document.getElementById('canvas');\r\n    this.canvas = <HTMLCanvasElement> document.getElementById('canvas');\r\n    this.ctx = this.canvas.getContext('2d');\r\n    this.sizeCanvas();\r\n    this.initEvents();\r\n    window.requestAnimationFrame((t) => {this.draw(t); });\r\n    console.log(this);\r\n\r\n    this.arr = new Array;\r\n\r\n    this.createObjs();\r\n\r\n  }\r\n  sizeCanvas() {\r\n    this.w = this.ctx.canvas.width = window.innerWidth;\r\n    this.h = this.ctx.canvas.height = window.innerHeight - 50;\r\n  }\r\n  draw(t) {\r\n    window.requestAnimationFrame((t) => {this.draw(t); });\r\n\r\n    this.ctx.clearRect(0, 0, this.w, this.h);\r\n    \r\n    for (let i = 0; i < this.arr.length; i++) {\r\n        this.arr[i].draw();\r\n\r\n        this.physics(this.arr[i]);\r\n    }\r\n\r\n\r\n\r\n  }\r\n    initEvents() {\r\n        window.onresize = (e) => {this.sizeCanvas()};\r\n    }\r\n\r\n    rngPath() {\r\n        return (Math.random() * 2 - 1);\r\n    }\r\n\r\n    rngPosition_x() {\r\n        return (Math.random() * this.w);\r\n    }\r\n\r\n    rngPosition_y() {\r\n        return (Math.random() * this.h);\r\n    }\r\n\r\n    rngSize() {\r\n        return (Math.random() * 60);\r\n    }\r\n\r\n    rngColor() {\r\n        let r = Math.round(Math.random() * 255);\r\n        let b = Math.round(Math.random() * 255);\r\n        let g = Math.round(Math.random() * 255);\r\n\r\n        return ('rgb(' + r + ',' + g + ',' + b + ')');\r\n    }\r\n\r\n    createObjs() {\r\n        for (let i = 0; i < 250; i++) {\r\n        this.arr.push();\r\n        this.arr[i] = new Circle(this, this.rngPosition_x(), this.ctx.canvas.height / 6, this.rngColor(), this.rngColor(), 10, this.rngSize(), 0, 2 * Math.PI);\r\n        this.arr[i].gravity();\r\n        this.arr[i].initial_speed_x(this.rngPath() * 500);\r\n        this.arr[i].initial_speed_y(this.rngPath() * 500);\r\n        }\r\n    }\r\n\r\n    //implements wall, floor, and ceiling collisions based on object location... Optimized for Circle class for now...\r\n    physics(object: any){\r\n        let friction:number = 0.99;\r\n        let collision:number = -0.8;\r\n\r\n        if (object.x > this.w - object.radius - object.width) {\r\n            object.x = this.w - object.radius - object.width;\r\n            if (Math.abs(object.x_speed) < 0.1) {\r\n                object.x_speed *= 0;\r\n                object.x_acc *= 0;\r\n                object.x = this.ctx.canvas.width - object.radius - object.width;\r\n            }\r\n            else {\r\n                object.x_speed *= collision;\r\n            }\r\n        } else if (object.x < object.radius + object.width) {\r\n            object.x = object.radius + object.width;\r\n            if (Math.abs(object.x_speed) < 1) {\r\n                object.x_speed *= 0;\r\n                object.x_acc *= 0;\r\n                object.x = object.radius + object.width;\r\n            }\r\n            else {\r\n                object.x_speed *= collision;\r\n            }\r\n        }\r\n\r\n\r\n        if (object.y > this.ctx.canvas.height - object.radius - object.width || object.y_acc === 0) {\r\n            object.y = this.ctx.canvas.height - object.radius - object.width;\r\n            console.log(object.y_speed);\r\n            if (Math.abs(object.y_speed) < 5) {\r\n                object.y_speed *= 0;\r\n                object.y_acc *= 0;\r\n                object.y = this.ctx.canvas.height - object.radius - object.width;\r\n            }\r\n            else {\r\n                object.y_speed *= collision;\r\n            }\r\n            object.x_speed *= friction;\r\n        } else if (object.y < object.radius + object.width) {\r\n            object.y = object.radius + object.width;\r\n            if (Math.abs(object.y_speed) < 1) {\r\n                object.y_speed *= 0;\r\n                object.y_acc *= 0;\r\n                object.y = object.radius + object.width;\r\n            }\r\n            else {\r\n                object.y_speed *= collision;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvar app = new App();"],"sourceRoot":"/source/"}